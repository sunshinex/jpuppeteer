package jpuppeteer.cdp.client.entity.input;

/**
*/
public class DispatchKeyEventRequest {

    /**
    * Type of the key event.
    */
    private jpuppeteer.cdp.client.constant.input.DispatchKeyEventRequestType type;

    /**
    * Bit field representing pressed modifier keys. Alt=1, Ctrl=2, Meta/Command=4, Shift=8 (default: 0).
    */
    private Integer modifiers;

    /**
    * Time at which the event occurred.
    */
    private java.math.BigDecimal timestamp;

    /**
    * Text as generated by processing a virtual key code with a keyboard layout. Not needed for for `keyUp` and `rawKeyDown` events (default: "")
    */
    private String text;

    /**
    * Text that would have been generated by the keyboard if no modifiers were pressed (except for shift). Useful for shortcut (accelerator) key handling (default: "").
    */
    private String unmodifiedText;

    /**
    * Unique key identifier (e.g., 'U+0041') (default: "").
    */
    private String keyIdentifier;

    /**
    * Unique DOM defined string value for each physical key (e.g., 'KeyA') (default: "").
    */
    private String code;

    /**
    * Unique DOM defined string value describing the meaning of the key in the context of active modifiers, keyboard layout, etc (e.g., 'AltGr') (default: "").
    */
    private String key;

    /**
    * Windows virtual key code (default: 0).
    */
    private Integer windowsVirtualKeyCode;

    /**
    * Native virtual key code (default: 0).
    */
    private Integer nativeVirtualKeyCode;

    /**
    * Whether the event was generated from auto repeat (default: false).
    */
    private Boolean autoRepeat;

    /**
    * Whether the event was generated from the keypad (default: false).
    */
    private Boolean isKeypad;

    /**
    * Whether the event was a system key event (default: false).
    */
    private Boolean isSystemKey;

    /**
    * Whether the event was from the left or right side of the keyboard. 1=Left, 2=Right (default: 0).
    */
    private Integer location;

    /**
    * Editing commands to send with the key event (e.g., 'selectAll') (default: []). These are related to but not equal the command names used in `document.execCommand` and NSStandardKeyBindingResponding. See https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/editing/commands/editor_command_names.h for valid command names.
    */
    private java.util.List<String> commands;

    public void setType (jpuppeteer.cdp.client.constant.input.DispatchKeyEventRequestType type) {
        this.type = type;
    }

    public jpuppeteer.cdp.client.constant.input.DispatchKeyEventRequestType getType() {
        return this.type;
    }

    public void setModifiers (Integer modifiers) {
        this.modifiers = modifiers;
    }

    public Integer getModifiers() {
        return this.modifiers;
    }

    public void setTimestamp (java.math.BigDecimal timestamp) {
        this.timestamp = timestamp;
    }

    public java.math.BigDecimal getTimestamp() {
        return this.timestamp;
    }

    public void setText (String text) {
        this.text = text;
    }

    public String getText() {
        return this.text;
    }

    public void setUnmodifiedText (String unmodifiedText) {
        this.unmodifiedText = unmodifiedText;
    }

    public String getUnmodifiedText() {
        return this.unmodifiedText;
    }

    public void setKeyIdentifier (String keyIdentifier) {
        this.keyIdentifier = keyIdentifier;
    }

    public String getKeyIdentifier() {
        return this.keyIdentifier;
    }

    public void setCode (String code) {
        this.code = code;
    }

    public String getCode() {
        return this.code;
    }

    public void setKey (String key) {
        this.key = key;
    }

    public String getKey() {
        return this.key;
    }

    public void setWindowsVirtualKeyCode (Integer windowsVirtualKeyCode) {
        this.windowsVirtualKeyCode = windowsVirtualKeyCode;
    }

    public Integer getWindowsVirtualKeyCode() {
        return this.windowsVirtualKeyCode;
    }

    public void setNativeVirtualKeyCode (Integer nativeVirtualKeyCode) {
        this.nativeVirtualKeyCode = nativeVirtualKeyCode;
    }

    public Integer getNativeVirtualKeyCode() {
        return this.nativeVirtualKeyCode;
    }

    public void setAutoRepeat (Boolean autoRepeat) {
        this.autoRepeat = autoRepeat;
    }

    public Boolean getAutoRepeat() {
        return this.autoRepeat;
    }

    public void setIsKeypad (Boolean isKeypad) {
        this.isKeypad = isKeypad;
    }

    public Boolean getIsKeypad() {
        return this.isKeypad;
    }

    public void setIsSystemKey (Boolean isSystemKey) {
        this.isSystemKey = isSystemKey;
    }

    public Boolean getIsSystemKey() {
        return this.isSystemKey;
    }

    public void setLocation (Integer location) {
        this.location = location;
    }

    public Integer getLocation() {
        return this.location;
    }

    public void setCommands (java.util.List<String> commands) {
        this.commands = commands;
    }

    public java.util.List<String> getCommands() {
        return this.commands;
    }

    public DispatchKeyEventRequest(jpuppeteer.cdp.client.constant.input.DispatchKeyEventRequestType type, Integer modifiers, java.math.BigDecimal timestamp, String text, String unmodifiedText, String keyIdentifier, String code, String key, Integer windowsVirtualKeyCode, Integer nativeVirtualKeyCode, Boolean autoRepeat, Boolean isKeypad, Boolean isSystemKey, Integer location, java.util.List<String> commands) {
        this.type = type;
        this.modifiers = modifiers;
        this.timestamp = timestamp;
        this.text = text;
        this.unmodifiedText = unmodifiedText;
        this.keyIdentifier = keyIdentifier;
        this.code = code;
        this.key = key;
        this.windowsVirtualKeyCode = windowsVirtualKeyCode;
        this.nativeVirtualKeyCode = nativeVirtualKeyCode;
        this.autoRepeat = autoRepeat;
        this.isKeypad = isKeypad;
        this.isSystemKey = isSystemKey;
        this.location = location;
        this.commands = commands;
    }

    public DispatchKeyEventRequest(jpuppeteer.cdp.client.constant.input.DispatchKeyEventRequestType type) {
        this.type = type;
        this.modifiers = null;
        this.timestamp = null;
        this.text = null;
        this.unmodifiedText = null;
        this.keyIdentifier = null;
        this.code = null;
        this.key = null;
        this.windowsVirtualKeyCode = null;
        this.nativeVirtualKeyCode = null;
        this.autoRepeat = null;
        this.isKeypad = null;
        this.isSystemKey = null;
        this.location = null;
        this.commands = null;
    }

    public DispatchKeyEventRequest() {
    }

}